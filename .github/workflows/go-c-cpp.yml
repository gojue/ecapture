name: GO/C/C++ CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-on-ubuntu2204:
    runs-on: ubuntu-22.04
    name: build on ubuntu-22.04 x86_64
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.10'
      - name: Install Compilers
        run: |
          sudo apt-get update
          sudo apt-get install --yes build-essential pkgconf libelf-dev llvm-14 clang-14 flex bison linux-tools-common linux-tools-generic gcc gcc-aarch64-linux-gnu libssl-dev linux-source
          for tool in "clang" "llc" "llvm-strip"
          do
            sudo rm -f /usr/bin/$tool
            sudo ln -s /usr/bin/$tool-14 /usr/bin/$tool
          done
          cd /usr/src
          source_file=$(find . -maxdepth 1 -name "*linux-source*.tar.bz2")
          source_dir=$(echo "$source_file" | sed 's/\.tar\.bz2//g')  
          sudo tar -xf $source_file
          cd $source_dir
          test -f .config || sudo make oldconfig
          sudo make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- prepare V=0
          ls -al /usr/src/$source_dir
        shell: bash
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - name: Build CO-RE
        run: |
          make clean
          make env
          DEBUG=1 make -j8
          cd ./lib/libpcap/ && sudo make install
          cd $GITHUB_WORKSPACE
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          args: --disable-all -E errcheck -E staticcheck
          skip-cache: true
          problem-matchers: true
      - name: Build non-CO-RE
        run: |
          make clean
          make env
          make nocore
      - name: Build CO-RE (Cross-Compilation)
        run: |
          make clean
          CROSS_ARCH=arm64 make env
          CROSS_ARCH=arm64 make -j8
      - name: Build non-CO-RE (Cross-Compilation/Android)
        run: |
          make clean
          CROSS_ARCH=arm64 make env
          ANDROID=1 CROSS_ARCH=arm64 make nocore -j8
      - name: Test
        run: go test -v -race ./...

  build-on-ubuntu2204-arm64:
    runs-on: ubuntu-22.04-arm
    name: build on ubuntu-22.04 arm64
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.10'
      - name: Install Compilers
        run: |
          sudo apt-get update
          sudo apt-get install --yes build-essential pkgconf libelf-dev llvm-14 clang-14 flex bison linux-tools-common linux-tools-generic gcc gcc-x86-64-linux-gnu libssl-dev linux-source
          for tool in "clang" "llc" "llvm-strip"
          do
            sudo rm -f /usr/bin/$tool
            sudo ln -s /usr/bin/$tool-14 /usr/bin/$tool
          done
          cd /usr/src
          source_file=$(find . -maxdepth 1 -name "*linux-source*.tar.bz2")
          source_dir=$(echo "$source_file" | sed 's/\.tar\.bz2//g')  
          sudo tar -xf $source_file
          cd $source_dir
          test -f .config || sudo make oldconfig
          sudo make ARCH=x86 CROSS_COMPILE=x86_64-linux-gnu- prepare V=0 > /dev/null
          ls -al /usr/src/$source_dir
        shell: bash
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - name: Build CO-RE
        run: |
          make clean
          make env
          DEBUG=1 make -j8
          cd ./lib/libpcap/ && sudo make install
          cd $GITHUB_WORKSPACE
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          args: --disable-all -E errcheck -E staticcheck
          skip-cache: true
          problem-matchers: true
      - name: Build non-CO-RE
        run: |
          make clean
          make env
          make nocore
      - name: Build CO-RE (Cross-Compilation)
        run: |
          make clean
          CROSS_ARCH=amd64 make env
          CROSS_ARCH=amd64 make -j8
      - name: Build non-CO-RE (Cross-Compilation/Android)
        run: |
          make clean
          CROSS_ARCH=amd64 make env
          ANDROID=1 CROSS_ARCH=amd64 make nocore -j8
      - name: Test
        run: go test -v -race ./...
